<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asuka.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.asuka.user.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="gender" jdbcType="INTEGER" property="gender"/>
    <result column="register_date" jdbcType="DATE" property="registerDate"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, password, email, gender, register_date, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="getByUsernameAndPassword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where username = #{username} and password = #{password}
  </select>
  <select id="getAll" resultType="com.asuka.user.entity.User">
    select
    <include refid="Base_Column_List"/>
    from user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.asuka.user.entity.User">
    insert into user (user_id, username, password,
    email, gender, register_date,
    phone)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{registerDate,jdbcType=DATE},
    #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.asuka.user.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="registerDate != null">
        register_date,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.asuka.user.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="registerDate != null">
        register_date = #{registerDate,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asuka.user.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    gender = #{gender,jdbcType=INTEGER},
    register_date = #{registerDate,jdbcType=DATE},
    phone = #{phone,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>